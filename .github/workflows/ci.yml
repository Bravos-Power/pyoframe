# Note: We use the insecure pull_request_target to allow running workflows from forks.
# However, we've added checks (see below) for safety.
# In short, the 'safe to test' label must exist AND the workflow must be run by someone with write access.
# See more details here:
#   - https://securitylab.github.com/resources/github-actions-preventing-pwn-requests/
#   - https://michaelheap.com/access-secrets-from-forks/
name: Build
on:
  push:
    branches: [ main ]
  pull_request_target:
    types: [labeled]
    branches: [ '*' ]
  schedule:
  - cron: "0 5 * * WED"
jobs:
  run:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    strategy:
      matrix:
        python-version: ["3.12"]
        polars-version: ["1.17.1"]
        include:
          - python-version: "3.9"
            polars-version: "0.20.27"
    steps:
      # Important checks to ensure that the user has the required permissions. See note above.
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        shell: bash
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }} # This is dangerous without the first access check. See note above.
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - uses: ./.github/actions/setup_optimizers_linux
        with:
          GUROBI_WLS: ${{ secrets.GUROBI_WLS }}
          CHECK_LICENSE: true
      - name: Install dependencies
        run: |
          pip install --editable .[dev]
          pip install polars==${{ matrix.polars-version }}
      - name: Run tests and collect coverage
        run: pytest --cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4-beta
        with:
          name: coverage-polars-${{ matrix.polars-version }}
          flags: smart-tests
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
