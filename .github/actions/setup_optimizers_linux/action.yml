# Copyright (c) 2023: Yue Yang
# Mozilla Public License Version 2.0
# https://mozilla.org/MPL/2.0/.

name: "Install optimizers on linux"

inputs:
  GUROBI_WLS: 
    description: "..."
    required: true
  # COPT_CLIENT_INI:
  #   description: "..."
  #   required: true
  # MOSEK_LICENSE:
  #   description: "..."
  #   required: true
  # GITHUB_TOKEN:
  #   description: "..."
  #   required: true
  CHECK_LICENSE: 
    description: "..."
    required: true

runs:
  using: "composite"
  steps:
    - name: Create directory to store installers
      shell: bash
      run: |
        mkdir -p ~/installers

    - name: Cache Installers
      id: cache-installers-linux
      uses: actions/cache@v4
      env:
        cache-name: cache-installers-linux
      with:
        path: ~/installers
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('optimizer_version.toml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - if: ${{ steps.cache-installers-linux.outputs.cache-hit != 'true' }}
      shell: bash
      name: Download Installers
      run: |
        curl -L -o ~/installers/gurobi.tar.gz https://packages.gurobi.com/12.0/gurobi12.0.2_linux64.tar.gz

    - name: Setup Gurobi Installation
      shell: bash
      env:
        GUROBI_WLS: ${{ inputs.GUROBI_WLS }}
      run: |
        tar xfz ~/installers/gurobi.tar.gz -C ~/
        ls ~/gurobi1202/linux64
        # set environment variables
        export GUROBI_HOME="${HOME}/gurobi1202/linux64"
        echo "GUROBI_HOME=${GUROBI_HOME}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${GUROBI_HOME}/bin" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib" >> $GITHUB_ENV
        echo $GUROBI_HOME
        
        # setup license using secrets
        echo "$GUROBI_WLS" > ~/gurobi.lic
        echo "GRB_LICENSE_FILE=${HOME}/gurobi.lic" >> $GITHUB_ENV
    - name: Test Gurobi
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      uses: nick-fields/retry@v3    # wait 30 seconds (5x) if all licenses are already in use
      with:
        max_attempts: 5
        retry_wait_seconds: 30
        timeout_minutes: 1
        command: gurobi_cl

    # - name: Setup COPT Installation
    #   shell: bash
    #   env:
    #     COPT_CLIENT_INI: ${{ inputs.COPT_CLIENT_INI }}
    #   run: |
    #     tar xfz ~/installers/copt.tar.gz -C ~/
    #     ls ~/copt72
    #     # set environment variables
    #     export COPT_HOME="${HOME}/copt72"
    #     echo "COPT_HOME=${COPT_HOME}" >> $GITHUB_ENV
    #     echo "PATH=${PATH}:${COPT_HOME}/bin" >> $GITHUB_ENV
    #     echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${COPT_HOME}/lib" >> $GITHUB_ENV
    #     echo $COPT_HOME

    #     # Just use the size-limited license
    #     # echo "$COPT_CLIENT_INI" > ~/client.ini
    #     # echo "COPT_LICENSE_DIR=${HOME}" >> $GITHUB_ENV
    # - name: Test COPT
    #   if: ${{ inputs.CHECK_LICENSE == 'true' }}
    #   shell: bash
    #   run: |
    #     copt_cmd -c "quit"

    # - name: Setup MOSEK Installation
    #   shell: bash
    #   env:
    #     MOSEK_LICENSE: ${{ inputs.MOSEK_LICENSE }}
    #   run: |
    #     tar jxf ~/installers/mosek.tar.bz2 -C ~/
    #     ls ~/mosek
    #     # set environment variables
    #     export MOSEK_10_2_BINDIR="${HOME}/mosek/10.2/tools/platform/linux64x86/bin"
    #     echo "MOSEK_10_2_BINDIR=${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
    #     echo "PATH=${PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
    #     echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
    #     echo $MOSEK_10_2_BINDIR

    #     # setup license using secrets
    #     echo "$MOSEK_LICENSE" > ~/mosek.lic
    #     echo "MOSEKLM_LICENSE_FILE=${HOME}/mosek.lic" >> $GITHUB_ENV
    # - name: Test MOSEK
    #   if: ${{ inputs.CHECK_LICENSE == 'true' }}
    #   shell: bash
    #   run: |
    #     msktestlic

    # - name: Setup IPOPT Installation
    #   shell: bash
    #   run: |
    #     mkdir -p ~/ipopt
    #     tar xfz ~/installers/idaes-solvers.tar.gz -C ~/ipopt
    #     echo "PATH=${PATH}:${HOME}/ipopt" >> $GITHUB_ENV
    #     echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/ipopt" >> $GITHUB_ENV
    #     ls ~/ipopt
    # - name: Test IPOPT
    #   shell: bash
    #   run: |
    #     ipopt -v
